DROP TABLE IF EXISTS task_image, task, processed_event CASCADE;

CREATE TABLE IF NOT EXISTS task(
    id_task UUID PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT NOT NULL DEFAULT 'Описание отсутствует.',
    importance VARCHAR(20) NOT NULL CHECK(importance IN('LOW', 'INTERMEDIATE', 'HIGH')) DEFAULT 'LOW',
    status VARCHAR(20) NOT NULL CHECK(status IN('PLANING', 'IN_PROGRESS', 'COMPLETED', 'CANCELED', 'EXPIRED')),
    date_added DATE NOT NULL DEFAULT current_date,
    date_updated TIMESTAMP NOT NULL,
    date_finished DATE NOT NULL DEFAULT current_timestamp,
    finished BOOLEAN NOT NULL DEFAULT FALSE,
    id_project UUID NOT NULL
);

CREATE TABLE IF NOT EXISTS task_image(
    id_task_image BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(50) NOT NULL,
    content_type VARCHAR(20) NOT NULL,
    size BIGINT NOT NULL CHECK ( size > 0 ),
    binary_data BYTEA NOT NULL,
    date_added DATE NOT NULL DEFAULT current_date,
    id_task UUID REFERENCES task(id_task) ON DELETE CASCADE ON UPDATE CASCADE
);

-- For kafka idempotent consumer
CREATE TABLE IF NOT EXISTS processed_event(
    id_event BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    message_id UUID NOT NULL,
    project_id UUID
);

CREATE INDEX message_idx ON processed_event USING HASH(message_id);